{
    "address": "0x46A3cB6C3B8de20be9F878FC8A853a1eA3A8c1F2",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_index",
                    "type": "uint256"
                }
            ],
            "name": "getFunders",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        }
    ],
    "transactionHash": "0x058fe7c4b071b5a506d86ed85eaf00e08519296dfaffe4f84f71da959aa3ec6e",
    "receipt": {
        "to": null,
        "from": "0xEfC0915fCcdBf16edB254017BDF5810aED542C54",
        "contractAddress": "0x46A3cB6C3B8de20be9F878FC8A853a1eA3A8c1F2",
        "transactionIndex": 10,
        "gasUsed": "1028848",
        "logsBloom": "0x
        "blockHash": "0x3bd97a2bb7acb172cfb0dfe55ed327ec6acac09da2c2c2df1975cb7ca4e1165f",
        "transactionHash": "0x058fe7c4b071b5a506d86ed85eaf00e08519296dfaffe4f84f71da959aa3ec6e",
        "logs": [],
        "blockNumber": 10937149,
        "cumulativeGasUsed": "10462445",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"],
    "numDeployments": 2,
    "solcInputHash": "5ae28199fc01922e109683e6c0801ec9",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Saeid\",\"details\":\"This implement price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function fund the contract\"}},\"notice\":\"This is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Pragma:\\npragma solidity ^0.8.8;\\n\\n// Imports:\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n// Error Codes:\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for funding\\n * @author Saeid\\n * @notice This is to demo a sample funding contract\\n * @dev This implement price feeds as our library\\n */\\ncontract FundMe {\\n    // Type Decalaration:\\n    using PriceConverter for uint256;\\n\\n    // State Variables:\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions:\\n\\n    constructor(address _priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(_priceFeedAddress);\\n    }\\n\\n    /**\\n     * @notice This function fund the contract\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mapping can not be in memory!!!!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 _index) public view returns (address) {\\n        return s_funders[_index];\\n    }\\n\\n    function getAddressToAmountFunded(address _funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[_funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xa50beed08e8adca6efe77f0453bf434765386554862e02eae36c9faf8c017ed9\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface _priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 answer, , , ) = _priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface _priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(_priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x603dd208434fd3d9e4e25bdf188c76a91ef50e4e57bc4b37dbaf8d4dabf77e13\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012c4380380620012c4833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61113e620001866000396000818161022b0152818161047a0152818161060401526107fa015261113e6000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461012f5780639e87a5cd1461015a578063b60d428814610185578063be2693f01461018f5761007b565b80630343fb25146100805780633a7b6c74146100bd5780633ccfd60b146100fa5780636b69a59214610104575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a76565b610199565b6040516100b49190610abc565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610b03565b6101e1565b6040516100f19190610b3f565b60405180910390f35b610102610229565b005b34801561011057600080fd5b50610119610469565b6040516101269190610abc565b60405180910390f35b34801561013b57600080fd5b50610144610476565b6040516101519190610b3f565b60405180910390f35b34801561016657600080fd5b5061016f61049e565b60405161017c9190610bb9565b60405180910390f35b61018d6104c8565b005b610197610602565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600182815481106101f7576101f6610bd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ae576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610359576000600182815481106102d4576102d3610bd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061035190610c32565b9150506102b1565b50600067ffffffffffffffff81111561037557610374610c7b565b5b6040519080825280602002602001820160405280156103a35781602001602082028036833780820191505090505b50600190805190602001906103b992919061096c565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103e090610cdb565b60006040518083038185875af1925050503d806000811461041d576040519150601f19603f3d011682016040523d82523d6000602084013e610422565b606091505b5050905080610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d90610d4d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610507600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089090919063ffffffff16565b1015610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f90610db9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105969190610dd9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610687576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561070b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106c1575b5050505050905060005b815181101561079557600082828151811061073357610732610bd4565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078d90610c32565b915050610715565b50600067ffffffffffffffff8111156107b1576107b0610c7b565b5b6040519080825280602002602001820160405280156107df5781602001602082028036833780820191505090505b50600190805190602001906107f592919061096c565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161083c90610cdb565b60006040518083038185875af1925050503d8060008114610879576040519150601f19603f3d011682016040523d82523d6000602084013e61087e565b606091505b505090508061088c57600080fd5b5050565b60008061089c836108cc565b90506000670de0b6b3a764000085836108b59190610e2f565b6108bf9190610eb8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091557600080fd5b505afa158015610929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094d9190610f76565b5050509150506402540be400816109649190610ff1565b915050919050565b8280548282559060005260206000209081019282156109e5579160200282015b828111156109e45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061098c565b5b5090506109f291906109f6565b5090565b5b80821115610a0f5760008160009055506001016109f7565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4382610a18565b9050919050565b610a5381610a38565b8114610a5e57600080fd5b50565b600081359050610a7081610a4a565b92915050565b600060208284031215610a8c57610a8b610a13565b5b6000610a9a84828501610a61565b91505092915050565b6000819050919050565b610ab681610aa3565b82525050565b6000602082019050610ad16000830184610aad565b92915050565b610ae081610aa3565b8114610aeb57600080fd5b50565b600081359050610afd81610ad7565b92915050565b600060208284031215610b1957610b18610a13565b5b6000610b2784828501610aee565b91505092915050565b610b3981610a38565b82525050565b6000602082019050610b546000830184610b30565b92915050565b6000819050919050565b6000610b7f610b7a610b7584610a18565b610b5a565b610a18565b9050919050565b6000610b9182610b64565b9050919050565b6000610ba382610b86565b9050919050565b610bb381610b98565b82525050565b6000602082019050610bce6000830184610baa565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c3d82610aa3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7057610c6f610c03565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cc5600083610caa565b9150610cd082610cb5565b600082019050919050565b6000610ce682610cb8565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d37600b83610cf0565b9150610d4282610d01565b602082019050919050565b60006020820190508181036000830152610d6681610d2a565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610da3601b83610cf0565b9150610dae82610d6d565b602082019050919050565b60006020820190508181036000830152610dd281610d96565b9050919050565b6000610de482610aa3565b9150610def83610aa3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e2457610e23610c03565b5b828201905092915050565b6000610e3a82610aa3565b9150610e4583610aa3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e7e57610e7d610c03565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ec382610aa3565b9150610ece83610aa3565b925082610ede57610edd610e89565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f0881610ee9565b8114610f1357600080fd5b50565b600081519050610f2581610eff565b92915050565b6000819050919050565b610f3e81610f2b565b8114610f4957600080fd5b50565b600081519050610f5b81610f35565b92915050565b600081519050610f7081610ad7565b92915050565b600080600080600060a08688031215610f9257610f91610a13565b5b6000610fa088828901610f16565b9550506020610fb188828901610f4c565b9450506040610fc288828901610f61565b9350506060610fd388828901610f61565b9250506080610fe488828901610f16565b9150509295509295909350565b6000610ffc82610f2b565b915061100783610f2b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561104657611045610c03565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561108357611082610c03565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110c0576110bf610c03565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110fd576110fc610c03565b5b82820290509291505056fea2646970667358221220ffe1c629124bb691e1a51ed6bbb434658981711b5583d86080e01e41b853bd2364736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461012f5780639e87a5cd1461015a578063b60d428814610185578063be2693f01461018f5761007b565b80630343fb25146100805780633a7b6c74146100bd5780633ccfd60b146100fa5780636b69a59214610104575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a76565b610199565b6040516100b49190610abc565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610b03565b6101e1565b6040516100f19190610b3f565b60405180910390f35b610102610229565b005b34801561011057600080fd5b50610119610469565b6040516101269190610abc565b60405180910390f35b34801561013b57600080fd5b50610144610476565b6040516101519190610b3f565b60405180910390f35b34801561016657600080fd5b5061016f61049e565b60405161017c9190610bb9565b60405180910390f35b61018d6104c8565b005b610197610602565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600182815481106101f7576101f6610bd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ae576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610359576000600182815481106102d4576102d3610bd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061035190610c32565b9150506102b1565b50600067ffffffffffffffff81111561037557610374610c7b565b5b6040519080825280602002602001820160405280156103a35781602001602082028036833780820191505090505b50600190805190602001906103b992919061096c565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103e090610cdb565b60006040518083038185875af1925050503d806000811461041d576040519150601f19603f3d011682016040523d82523d6000602084013e610422565b606091505b5050905080610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d90610d4d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610507600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089090919063ffffffff16565b1015610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f90610db9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105969190610dd9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610687576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561070b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106c1575b5050505050905060005b815181101561079557600082828151811061073357610732610bd4565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078d90610c32565b915050610715565b50600067ffffffffffffffff8111156107b1576107b0610c7b565b5b6040519080825280602002602001820160405280156107df5781602001602082028036833780820191505090505b50600190805190602001906107f592919061096c565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161083c90610cdb565b60006040518083038185875af1925050503d8060008114610879576040519150601f19603f3d011682016040523d82523d6000602084013e61087e565b606091505b505090508061088c57600080fd5b5050565b60008061089c836108cc565b90506000670de0b6b3a764000085836108b59190610e2f565b6108bf9190610eb8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091557600080fd5b505afa158015610929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094d9190610f76565b5050509150506402540be400816109649190610ff1565b915050919050565b8280548282559060005260206000209081019282156109e5579160200282015b828111156109e45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061098c565b5b5090506109f291906109f6565b5090565b5b80821115610a0f5760008160009055506001016109f7565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4382610a18565b9050919050565b610a5381610a38565b8114610a5e57600080fd5b50565b600081359050610a7081610a4a565b92915050565b600060208284031215610a8c57610a8b610a13565b5b6000610a9a84828501610a61565b91505092915050565b6000819050919050565b610ab681610aa3565b82525050565b6000602082019050610ad16000830184610aad565b92915050565b610ae081610aa3565b8114610aeb57600080fd5b50565b600081359050610afd81610ad7565b92915050565b600060208284031215610b1957610b18610a13565b5b6000610b2784828501610aee565b91505092915050565b610b3981610a38565b82525050565b6000602082019050610b546000830184610b30565b92915050565b6000819050919050565b6000610b7f610b7a610b7584610a18565b610b5a565b610a18565b9050919050565b6000610b9182610b64565b9050919050565b6000610ba382610b86565b9050919050565b610bb381610b98565b82525050565b6000602082019050610bce6000830184610baa565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c3d82610aa3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7057610c6f610c03565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cc5600083610caa565b9150610cd082610cb5565b600082019050919050565b6000610ce682610cb8565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d37600b83610cf0565b9150610d4282610d01565b602082019050919050565b60006020820190508181036000830152610d6681610d2a565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610da3601b83610cf0565b9150610dae82610d6d565b602082019050919050565b60006020820190508181036000830152610dd281610d96565b9050919050565b6000610de482610aa3565b9150610def83610aa3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e2457610e23610c03565b5b828201905092915050565b6000610e3a82610aa3565b9150610e4583610aa3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e7e57610e7d610c03565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ec382610aa3565b9150610ece83610aa3565b925082610ede57610edd610e89565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f0881610ee9565b8114610f1357600080fd5b50565b600081519050610f2581610eff565b92915050565b6000819050919050565b610f3e81610f2b565b8114610f4957600080fd5b50565b600081519050610f5b81610f35565b92915050565b600081519050610f7081610ad7565b92915050565b600080600080600060a08688031215610f9257610f91610a13565b5b6000610fa088828901610f16565b9550506020610fb188828901610f4c565b9450506040610fc288828901610f61565b9350506060610fd388828901610f61565b9250506080610fe488828901610f16565b9150509295509295909350565b6000610ffc82610f2b565b915061100783610f2b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561104657611045610c03565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561108357611082610c03565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110c0576110bf610c03565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110fd576110fc610c03565b5b82820290509291505056fea2646970667358221220ffe1c629124bb691e1a51ed6bbb434658981711b5583d86080e01e41b853bd2364736f6c63430008080033",
    "devdoc": {
        "author": "Saeid",
        "details": "This implement price feeds as our library",
        "kind": "dev",
        "methods": {},
        "title": "A contract for funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function fund the contract"
            }
        },
        "notice": "This is to demo a sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 59,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 74,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
